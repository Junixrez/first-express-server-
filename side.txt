const express = require("express");

const app = express();

// middleware to parse json body
app.use(express.json());

// get all users
app.get("/users", (req, res) => {
  res.status(200).json({ message: "Users fetched successfully", users });
});

// get user by id
app.get("/users/:id", (req, res) => {
  const { id } = req.params;
  console.log(req.query);

  const user = users.find((user) => user.id === parseInt(id));
  if (!user) {
    return res.status(404).json({ message: "User not found" });
  }
  res.status(200).json({ message: "User fetched successfully", user });
});

// create user
app.post("/users", async (req, res) => {
  const newUser = req.body;
  users.push(newUser);
  await fs.promises.writeFile("users.json", JSON.stringify(users));
  res.json({ message: "User created successfully", user: newUser });
});

// update
app.put("/users/:id", async (req, res) => {
  const { id } = req.params;
  const updateUser = req.body;
  const userIndex = users.findIndex((user) => user.id === parseInt(id));
  if (userIndex === -1) {
    return res.status(404).json({ message: "User not found" });
  }
  users[userIndex] = { ...users[userIndex], ...updateUser };
  await fs.promises.writeFile("data.json", JSON.stringify(users));
  res.json({ message: "User updated successfully", user: users[userIndex] });
});

//delete
app.delete("/users/:id", async (req, res) => {
  const { id } = req.params;
  const userIndex = users.findIndex((user) => user.id === parseInt(id));
  if (userIndex === -1) {
    return res.status(404).json({ message: "User not found" });
  }
  const deletedUser = users.splice(userIndex, 1);
  await fs.promises.writeFile("users.json", JSON.stringify(users));
  res.json({ message: "User deleted successfully", user: deletedUser[0] });
});

app.listen(5000, () => {
  console.log(`Server is running on port 5000`);
});
